openapi: 3.0.3
info:
  title: Darkwebsearch - Data Analyzer API
  version: "1.0.0"
  description: API for analyzing data and create tags in Darkwebsearch.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: "/"
    description: Relative server URL

paths:
  /analyze:
    post:
      summary: Analyze data and create tags
      operationId: analyzeData
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [content]
              properties:
                query:
                  type: string
                  description: Search query text
      responses:
        "200":
          description: Successful analyzation
          content:
            application/json:
              schema:
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: string
                  title:
                    type: string
                  legality:
                    type: boolean
                  description:
                    type: string
                  url:
                    type: string
                  jobId:
                    type: string

        "400":
          description: Invalid request
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /status:
    post:
      summary: Provide analyzation status
      operationId: analyzationStatus
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [jobId]
              properties:
                jobId:
                  type: string
      responses:
        "200":
          description: Successful status check
          content:
            application/json:
              schema:
                type: boolean
        "400":
          description: Invalid request
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
